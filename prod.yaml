apiVersion: v1
kind: Namespace
metadata:
  name: prod
--- 

apiVersion: v1
kind: ConfigMap
metadata:
  name: db-config
  namespace: prod
data:
  DB_USER: projectdb
  DB_HOST: "192.168.56.116"
  DB_DATABASE: projectdb
  DB_PORT: "5432"
--- 

apiVersion: apps/v1
kind: Deployment
metadata:
  name: project
  namespace: prod
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: project
  template:
    metadata:
      labels:
        app: project
    spec:
      containers:
      - name: project
        image: "ymazurau/project:itbtv.1"
        imagePullPolicy: IfNotPresent
        command: ["npm", "start"]
        ports:
        - containerPort: 3000
        env:
        - name: DEBUG
          value: "app:*"
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: db-config
              key: DB_USER
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: db-config
              key: DB_HOST
        - name: DB_DATABASE
          valueFrom:
            configMapKeyRef:
              name: db-config
              key: DB_DATABASE
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: db-config
              key: DB_PORT
        # - name: DB_PASSWORD
        #   valueFrom:
        #     configMapKeyRef:
        #       name: db-config
        #       key: DB_PASSWORD
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secretp
              key: DB_PASSWORD
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx"
  name: project-ingress
  namespace: prod
spec:
  ingressClassName: nginx
  rules:
  - host: emazurov.maz
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: project
            port:
              number: 8080
---

apiVersion: v1
kind: Service
metadata:
  name: project
  namespace: prod
spec:
  selector:
    app: project
  ports:
  - name: http
    port: 8080
    targetPort: 3000
